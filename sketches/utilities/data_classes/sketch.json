{
   "api" : {
      "byfile" : [
         {
            "description" : "*Global* class to define if all the `files` exist.",
            "name" : "classname",
            "type" : "string"
         },
         {
            "description" : "List of files that must all exist for the `classname` to be defined",
            "name" : "files",
            "type" : "list"
         },
         {
            "name" : "defined",
            "type" : "return"
         }
      ],
      "byport" : [
         {
            "description" : "*Global* class to define if all the `ports` have listeners.",
            "name" : "classname",
            "type" : "string"
         },
         {
            "description" : "List of ports that must all have a listener for the `classname` to be defined",
            "name" : "ports",
            "type" : "list"
         },
         {
            "name" : "defined",
            "type" : "return"
         }
      ],
      "byprocess" : [
         {
            "description" : "*Global* class to define if all the `process_patterns` are matched.",
            "name" : "classname",
            "type" : "string"
         },
         {
            "description" : "List of process patterns that must all match in the process table for the `classname` to be defined",
            "name" : "process_patterns",
            "type" : "list"
         },
         {
            "default" : "",
            "description" : "If not empty, require this owner of the processes for the `classname` to be defined",
            "name" : "owner",
            "type" : "string"
         },
         {
            "default" : 1,
            "description" : "Required minimum count of processes for the `classname` to be defined",
            "name" : "min_process_count",
            "type" : "string"
         },
         {
            "default" : 1000000,
            "description" : "Required maximum count of processes for the `classname` to be defined (default is very large)",
            "name" : "max_process_count",
            "type" : "string"
         },
         {
            "name" : "defined",
            "type" : "return"
         }
      ],
      "byshell" : [
         {
            "description" : "*Global* class to define if all the `commands` run OK.",
            "name" : "classname",
            "type" : "string"
         },
         {
            "description" : "List of commands that must all run OK for the `classname` to be defined",
            "name" : "commands",
            "type" : "list"
         },
         {
            "name" : "defined",
            "type" : "return"
         }
      ]
   },
   "interface" : [
      "main.cf"
   ],
   "manifest" : {
      "README.md" : {
         "documentation" : true
      },
      "main.cf" : {
         "desc" : "main file"
      },
      "params/demo.json" : {
         "comment" : "Demo of data-driven classes."
      },
      "test.cf" : {
         "comment" : "Test Policy"
      }
   },
   "metadata" : {
      "authors" : [
         "Ted Zlatanov <tzz@lifelogs.com>"
      ],
      "depends" : {
         "CFEngine::dclib" : {},
         "CFEngine::stdlib" : {
            "version" : 109
         },
         "cfengine" : {
            "version" : "3.4.0"
         },
         "os" : [
            "linux"
         ]
      },
      "description" : "Define classes from data",
      "license" : "MIT",
      "name" : "Data::Classes",
      "tags" : [
         "cfdc",
         "data",
         "classes"
      ],
      "version" : 1
   }
}
