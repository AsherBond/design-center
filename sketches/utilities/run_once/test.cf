body common control
{
      bundlesequence => { cfsketch_g, cfsketch_run };
      inputs => { @(cfsketch_g.inputs)  };
}


# environment common bundles

# environment cf_sketch_testing
bundle common cf_sketch_testing
{
  vars:
      "activated" string => "any";
      "env_vars" slist => { "activated", "test", "verbose" };
      "test" string => "any";
      "verbose" string => "any";
  classes:
      "runenv_cf_sketch_testing_activated" expression => "any";
      "runenv_cf_sketch_testing_test" expression => "any";
      "runenv_cf_sketch_testing_verbose" expression => "any";
}


# activation data
bundle common cfsketch_g
{
  vars:
      # Files that need to be loaded for the activated sketches and
      # their dependencies.
      "inputs" slist => { "../../libraries/dclib/library.cf", "../../libraries/copbl/cfengine_stdlib.cf", "main.cf" };
}

bundle agent cfsketch_run
{
  vars:

      # array 'mymetadata' from definition sketch metadata, activation ___001_Run_Once_run
      "___001_Run_Once_run_mymetadata[activation][identifier]" string => "___001_Run_Once_run";
      "___001_Run_Once_run_mymetadata[activation][timestamp]" string => "notime";
      "___001_Run_Once_run_mymetadata[authors]" slist => { "Ted Zlatanov <tzz@lifelogs.com>" };
      "___001_Run_Once_run_mymetadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___001_Run_Once_run_mymetadata[license]" string => "MIT";
      "___001_Run_Once_run_mymetadata[location]" string => "/home/tzz/.cfagent/inputs/sketches/utilities/run_once";
      "___001_Run_Once_run_mymetadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf" };
      "___001_Run_Once_run_mymetadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___001_Run_Once_run_mymetadata[manifest_docs]" slist => { "README.md" };
      "___001_Run_Once_run_mymetadata[manifest_exe]" slist => { "cf_null" };
      "___001_Run_Once_run_mymetadata[manifest_extra]" slist => { "params/demo.json" };
      "___001_Run_Once_run_mymetadata[manifest_test]" slist => { "cf_null" };
      "___001_Run_Once_run_mymetadata[name]" string => "Run::Once";
      "___001_Run_Once_run_mymetadata[tags]" slist => { "cfdc", "run", "once", "window" };
      "___001_Run_Once_run_mymetadata[version]" string => "1";

      # list 'scripts' from definition parameter definition from /home/tzz/source/cfengine/design-center/tools/test/../../sketches/utilities/run_once/params/demo.json-1, activation ___001_Run_Once_run
      "___001_Run_Once_run_scripts" slist => { "/sbin/sysctl -a" };

      # array 'mymetadata' from definition sketch metadata, activation ___002_Run_Once_run
      "___002_Run_Once_run_mymetadata[activation][identifier]" string => "___002_Run_Once_run";
      "___002_Run_Once_run_mymetadata[activation][timestamp]" string => "notime";
      "___002_Run_Once_run_mymetadata[authors]" slist => { "Ted Zlatanov <tzz@lifelogs.com>" };
      "___002_Run_Once_run_mymetadata[depends]" slist => { "CFEngine::dclib", "CFEngine::stdlib" };
      "___002_Run_Once_run_mymetadata[license]" string => "MIT";
      "___002_Run_Once_run_mymetadata[location]" string => "/home/tzz/.cfagent/inputs/sketches/utilities/run_once";
      "___002_Run_Once_run_mymetadata[manifest]" slist => { "README.md", "main.cf", "params/demo.json", "test.cf" };
      "___002_Run_Once_run_mymetadata[manifest_cf]" slist => { "main.cf", "test.cf" };
      "___002_Run_Once_run_mymetadata[manifest_docs]" slist => { "README.md" };
      "___002_Run_Once_run_mymetadata[manifest_exe]" slist => { "cf_null" };
      "___002_Run_Once_run_mymetadata[manifest_extra]" slist => { "params/demo.json" };
      "___002_Run_Once_run_mymetadata[manifest_test]" slist => { "cf_null" };
      "___002_Run_Once_run_mymetadata[name]" string => "Run::Once";
      "___002_Run_Once_run_mymetadata[tags]" slist => { "cfdc", "run", "once", "window" };
      "___002_Run_Once_run_mymetadata[version]" string => "1";

      # list 'scripts' from definition parameter definition from /home/tzz/source/cfengine/design-center/tools/test/../../sketches/utilities/run_once/params/demo.json-2, activation ___002_Run_Once_run
      "___002_Run_Once_run_scripts" slist => { "/special/script" };

  methods:
    any::
      "cfsketch_g" usebundle => "cfsketch_g";
      "cf_sketch_testing" usebundle => "cf_sketch_testing";

    runenv_cf_sketch_testing_activated::
      "___001_Run_Once_run" usebundle => run("cf_sketch_testing", "default:cfsketch_run.___001_Run_Once_run_mymetadata", "any", @(cfsketch_run.___001_Run_Once_run_scripts)), ifvarclass => "linux", useresult => "return____001_Run_Once_run";
    runenv_cf_sketch_testing_activated::
      "___002_Run_Once_run" usebundle => run("cf_sketch_testing", "default:cfsketch_run.___002_Run_Once_run_mymetadata", "solaris", @(cfsketch_run.___002_Run_Once_run_scripts)), ifvarclass => "linux", useresult => "return____002_Run_Once_run";

  reports:
    inform_mode::
      "activation ___001_Run_Once_run could not run because it requires classes linux" ifvarclass => "inform_mode.!(linux)";
      "activation ___002_Run_Once_run could not run because it requires classes linux" ifvarclass => "inform_mode.!(linux)";
}
