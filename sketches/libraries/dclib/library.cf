bundle agent report_metadata(bundlename, metadata)
{
  classes:
      "given" not => strcmp($(metadata), "");

  vars:
      # pretty-print the authors and dependencies
      "_deps" slist => getindices("metadata[depends]");
      "dependencies" string => join(", ", "_deps");
      "authors" string => join(", ", "metadata[authors]");

  reports:
    given::
      "$(bundlename): $($(metadata)[name]) license = $($(metadata)[license])";
      "$(bundlename): $($(metadata)[name]) dependencies = $(dependencies)";

      "$(bundlename): $($(metadata)[name]) version $($(metadata)[version]) by $(authors) starting up...";
}

# an example of how a sketch can install itself
# "install" usebundle => default:install_sketch(METADATA, "sourcedir", "destdir");
# TODO: add permissions and owner/group
bundle agent install_sketch(metadata, source_dir, dest_dir)
{
  vars:
      "files" slist => { "@($(metadata)[manifest])" };

  files:
      "$(dest_dir)/$(files)"
      copy_from => local_cp("$(source_dir)/$(files)");

  reports:
    cfengine::
      "$(this.bundle): installing $(files) from $(source_dir) to $(dest_dir)";
}

bundle agent home(filename)
{
  classes:
      "home_extracted" expression => regextract("(.+)/[^/]+",
                                                $(filename),
                                                "xhome");

  vars:
    home_extracted::
      "home" string => "$(xhome[1])";
}

bundle common env
{
  vars:
      "env" slist => { "LOGNAME", "PATH", "HOME" };
      "$(env)" string => getenv("$(env)", "128");
}
